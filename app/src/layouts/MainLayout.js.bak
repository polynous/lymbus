import React, { useState } from 'react';
import { Outlet, Link, useNavigate, useLocation } from 'react-router-dom';
import { useAuth } from '../hooks/useAuth';
import { useTheme } from '../hooks/useTheme';
import { 
  FiHome, 
  FiLogOut, 
  FiMenu, 
  FiX, 
  FiArrowRight, 
  FiArrowLeft, 
  FiUser,
  FiUsers,
  FiSettings,
  FiHash,
  FiClock,
  FiCalendar
} from 'react-icons/fi';
import DarkModeToggle from '../components/DarkModeToggle';
import GlassCard from '../components/GlassCard';

// Import logo using require
const logo = require('../images/logo.svg').default;

const MainLayout = () => {
  const { user, logout } = useAuth();
  const { darkMode } = useTheme();
  const navigate = useNavigate();
  const location = useLocation();
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);

  // Check if user is a parent
  const isParent = user && (user.guardian_profile || user.email === "parent@example.com");

  const handleLogout = () => {
    logout();
    navigate('/login');
  };

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  const closeSidebar = () => {
    setIsSidebarOpen(false);
  };

  // Different menu items for parents and staff
  const staffMenuItems = [
    { path: '/app', icon: <FiHome />, text: 'Dashboard' },
    { path: '/app/entry', icon: <FiArrowRight />, text: 'Entrada de Alumnos' },
    { path: '/app/checkout', icon: <FiArrowLeft />, text: 'Salida de Alumnos' },
    { path: '/app/invite', icon: <FiUsers />, text: 'Invitar Usuarios' },
    { path: '/app/qr-codes', icon: <FiHash />, text: 'Códigos QR' },
    { path: '/app/settings', icon: <FiSettings />, text: 'Configuración' },
  ];

  const parentMenuItems = [
    { path: '/app', icon: <FiHome />, text: 'Panel de Familia' },
    { path: '/app/qr-codes', icon: <FiHash />, text: 'Códigos QR' },
    { path: '/app/attendance', icon: <FiClock />, text: 'Asistencia' },
    { path: '/app/settings', icon: <FiSettings />, text: 'Configuración' },
  ];

  // Choose the right menu based on user type
  const menuItems = isParent ? parentMenuItems : staffMenuItems;

  return (
    <div className={`flex h-screen transition-colors duration-200 ${
      darkMode 
        ? 'bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900' 
        : 'bg-gradient-to-br from-slate-100 via-slate-50 to-slate-100'
    }`}>
      {/* Overlay for mobile sidebar */}
      {isSidebarOpen && (
        <div 
          className={`fixed inset-0 backdrop-blur-sm z-30 md:hidden ${
            darkMode ? 'bg-black/70' : 'bg-black/50'
          }`}
          onClick={closeSidebar}
        ></div>
      )}
      
      {/* Mobile Sidebar */}
      <div 
        className={`fixed inset-0 z-40 flex md:hidden transform ${
          isSidebarOpen ? 'translate-x-0' : '-translate-x-full'
        } transition-transform duration-300 ease-in-out`}
      >
        <GlassCard className="relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4">
          <div className="absolute top-0 right-0 -mr-12 pt-2">
            <button
              className={`ml-1 flex items-center justify-center h-10 w-10 rounded-full backdrop-blur-sm text-white transition-colors ${
                darkMode ? 'bg-slate-700/80 hover:bg-slate-600' : 'bg-slate-600/80 hover:bg-slate-500'
              }`}
              onClick={closeSidebar}
            >
              <span className="sr-only">Cerrar sidebar</span>
              <FiX className="h-6 w-6" />
            </button>
          </div>
          <div className="flex-shrink-0 flex items-center justify-between px-4">
            <div className="flex items-center">
              <img
                className="mx-auto h-12 w-auto"
                src="/logo.svg"
                alt="Lymbus Logo"
              />
              <span className="ml-2 text-xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">Lymbus</span>
            </div>
            <DarkModeToggle />
          </div>
          <div className="mt-5 flex-1 h-0 overflow-y-auto">
            <nav className="px-2 space-y-1">
              {menuItems.map((item) => (
                <Link
                  key={item.path}
                  to={item.path}
                  className={`${
                    location.pathname === item.path
                      ? 'bg-gradient-to-r from-blue-500/20 to-cyan-500/20 text-blue-400 border-l-4 border-blue-400'
                      : darkMode 
                        ? 'text-slate-300 hover:bg-slate-700/50 hover:text-white border-l-4 border-transparent'
                        : 'text-slate-600 hover:bg-slate-200/50 hover:text-slate-900 border-l-4 border-transparent'
                  } group flex items-center px-3 py-2.5 text-base font-medium rounded-r-md transition-all duration-200`}
                  onClick={closeSidebar}
                >
                  <span className="mr-4 h-5 w-5">{item.icon}</span>
                  {item.text}
                </Link>
              ))}
            </nav>
          </div>
          <div className={`flex-shrink-0 p-4 border-t ${
            darkMode ? 'border-slate-700/50' : 'border-slate-200/50'
          }`}>
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="h-10 w-10 rounded-full bg-gradient-to-br from-blue-500 to-cyan-500 flex items-center justify-center text-white">
                  <FiUser className="h-5 w-5" />
                </div>
              </div>
              <div className="ml-3">
                <p className={`text-sm font-medium ${
                  darkMode ? 'text-white' : 'text-slate-900'
                }`}>
                  {user?.first_name} {user?.last_name}
                </p>
                <p className={`text-xs ${
                  darkMode ? 'text-slate-400' : 'text-slate-500'
                }`}>
                  {isParent ? 'Tutor' : 'Personal Escolar'}
                </p>
                <button
                  onClick={handleLogout}
                  className={`text-xs font-medium group flex items-center mt-1 transition-colors ${
                    darkMode 
                      ? 'text-slate-400 hover:text-blue-400' 
                      : 'text-slate-500 hover:text-blue-600'
                  }`}
                >
                  <FiLogOut className="mr-1 h-4 w-4" />
                  Cerrar sesión
                </button>
              </div>
            </div>
          </div>
        </GlassCard>
        <div className="flex-shrink-0 w-14" aria-hidden="true"></div>
      </div>

      {/* Desktop Sidebar */}
      <div className="hidden md:flex md:flex-shrink-0">
        <div className="flex flex-col w-64">
          <GlassCard className="flex flex-col h-full rounded-r-xl rounded-l-none">
            <div className={`flex items-center h-16 flex-shrink-0 px-4 justify-between border-b ${
              darkMode ? 'border-slate-700/50' : 'border-slate-200/50'
            }`}>
              <div className="flex items-center">
                <img
                  className="mx-auto h-12 w-auto"
                  src="/logo.svg"
                  alt="Lymbus Logo"
                />
                <span className="ml-2 text-xl font-bold bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent">Lymbus</span>
              </div>
              <DarkModeToggle />
            </div>
            <div className="flex-1 flex flex-col overflow-y-auto">
              <nav className="flex-1 px-2 py-4 space-y-1">
                {menuItems.map((item) => (
                  <Link
                    key={item.path}
                    to={item.path}
                    className={`${
                      location.pathname === item.path
                        ? 'bg-gradient-to-r from-blue-500/20 to-cyan-500/20 text-blue-400 border-l-4 border-blue-400'
                        : darkMode 
                          ? 'text-slate-300 hover:bg-slate-700/50 hover:text-white border-l-4 border-transparent'
                          : 'text-slate-600 hover:bg-slate-200/50 hover:text-slate-900 border-l-4 border-transparent'
                    } group flex items-center px-3 py-2.5 text-sm font-medium rounded-r-md transition-all duration-200`}
                  >
                    <span className="mr-3 h-5 w-5">{item.icon}</span>
                    {item.text}
                  </Link>
                ))}
              </nav>
              <div className={`flex-shrink-0 p-4 border-t ${
                darkMode ? 'border-slate-700/50' : 'border-slate-200/50'
              }`}>
                <div className="flex items-center">
                  <div className="flex-shrink-0">
                    <div className="h-10 w-10 rounded-full bg-gradient-to-br from-blue-500 to-cyan-500 flex items-center justify-center text-white">
                      <FiUser className="h-5 w-5" />
                    </div>
                  </div>
                  <div className="ml-3">
                    <p className={`text-sm font-medium ${
                      darkMode ? 'text-white' : 'text-slate-900'
                    }`}>
                      {user?.first_name} {user?.last_name}
                    </p>
                    <p className={`text-xs ${
                      darkMode ? 'text-slate-400' : 'text-slate-500'
                    }`}>
                      {isParent ? 'Tutor' : 'Personal Escolar'}
                    </p>
                    <button
                      onClick={handleLogout}
                      className={`text-xs font-medium group flex items-center mt-1 transition-colors ${
                        darkMode 
                          ? 'text-slate-400 hover:text-blue-400' 
                          : 'text-slate-500 hover:text-blue-600'
                      }`}
                    >
                      <FiLogOut className="mr-1 h-4 w-4" />
                      Cerrar sesión
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </GlassCard>
        </div>
      </div>

      {/* Main content */}
      <div className="flex flex-col flex-1 overflow-hidden">
        {/* Top navigation */}
        <div className={`flex items-center justify-between h-16 px-4 border-b ${
          darkMode ? 'border-slate-700/50' : 'border-slate-200/50'
        }`}>
          <button
            className="md:hidden p-2 rounded-md text-slate-400 hover:text-white hover:bg-slate-700/50 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500"
            onClick={toggleSidebar}
          >
            <span className="sr-only">Abrir sidebar</span>
            <FiMenu className="h-6 w-6" />
          </button>
        </div>

        {/* Page content */}
        <main className="flex-1 overflow-y-auto p-4">
          <Outlet />
        </main>
      </div>
    </div>
  );
};

export default MainLayout; 